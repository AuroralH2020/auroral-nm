/**
 * JSON WEB TOKEN 
 * https://www.rfc-editor.org/rfc/rfc7519#section-4.1
 */

// JWT reserved claims that are being used in AURORAL
export type JWTRegisteredClaims = {
    /*
    The "iss" (issuer) claim identifies the principal that issued the
    JWT.  The processing of this claim is generally application specific.
    The "iss" value is a case-sensitive string containing a StringOrURI
    value.  Use of this claim is OPTIONAL.
    */
    iss?: string, // I.e Auth server url or name - string
    /*
    The "sub" (subject) claim identifies the principal that is the
    subject of the JWT.  The claims in a JWT are normally statements
    about the subject.  The subject value MUST either be scoped to be
    locally unique in the context of the issuer or be globally unique.
    The processing of this claim is generally application specific.  The
    "sub" value is a case-sensitive string containing a StringOrURI
    value.  Use of this claim is OPTIONAL.
    */
    sub: string, // UID or AGID - string
    /*
    The "aud" (audience) claim identifies the recipients that the JWT is
    intended for.  Each principal intended to process the JWT MUST
    identify itself with a value in the audience claim.  If the principal
    processing the claim does not identify itself with a value in the
    "aud" claim when this claim is present, then the JWT MUST be
    rejected.  In the general case, the "aud" value is an array of case-
    sensitive strings, each containing a StringOrURI value.  In the
    special case when the JWT has one audience, the "aud" value MAY be a
    single case-sensitive string containing a StringOrURI value.  The
    interpretation of audience values is generally application specific.
    Use of this claim is OPTIONAL.
    */
    aud: string | string[], // URL of resource that can be accessed with the token - Array as string
    /*
    The "exp" (expiration time) claim identifies the expiration time on
    or after which the JWT MUST NOT be accepted for processing.  The
    processing of the "exp" claim requires that the current date/time
    MUST be before the expiration date/time listed in the "exp" claim.
    Implementers MAY provide for some small leeway, usually no more than
    a few minutes, to account for clock skew.  Its value MUST be a number
    containing a NumericDate value.  Use of this claim is OPTIONAL.
    */
    exp: number,
    /*
    The "iat" (issued at) claim identifies the time at which the JWT was
    issued.  This claim can be used to determine the age of the JWT.  Its
    value MUST be a number containing a NumericDate value.  Use of this
    claim is OPTIONAL.
    */
    iat: number,
}

// Valid AURORAL users/agents
export enum AuroralUserType {
    UI = 'UI',
    NODE = 'NODE'
}

// AURORAL defined claims for tokens created for authentication
// Main token for interaction with the UI and the DLT
// Used by UI users and Nodes
export type JWTAURORALToken = {
    cid: string // organisation id - string
    roles: string // AURORAL roles for the user - Array as string
    email: string // email - string
    purpose: string // Purpose of the token
    origin: AuroralUserType  // TBD
} & JWTRegisteredClaims

// AURORAL defined claims for mail tokens
// Tokens generated in AURORAL Cloud Auth Server
// Used to validate special requests
// Contain a temporary random string used as secret and to avoid the tokens to be reused
// Short exp time
export type JWTMailToken = {
    // iss: string, // Receive username
    // aud: string, // Token purpose
    // exp: number,
    // iat: number,
    // sub: string // Account secret
    secret: string // Account secret
    purpose: string // Purpose of the token
} & JWTRegisteredClaims

// AURORAL defined claims for gateway tokens
// This tokens are generated by the AURORAL Nodes
// AURORAL Cloud Auth Server is only validating them
export type JWTGatewayToken = {
    iss?: string, // Receive AGID (LEGACY, to be removed and use SUB claim for AGID)
    aud: string, // Only audience claim for gateway is 'NM' (LEGACY - To be updated in future version)
    cid: string // Missing in JWT - added in middleware
    // purpose: string // Replaces aud in future versions and aud value changes to 'auroral.bavenir.eu'
    agid: string // Internal use only == sub || iss (To be deprecated)
    email: string // fake email for DLT, AGID@auroral.eu
} & JWTRegisteredClaims
